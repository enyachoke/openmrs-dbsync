<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="receiver" errorHandlerRef="receiverShutdownErrorHandler">
        <from uri="{{camel.input.endpoint}}" />

        <log message="Received sync message" />

        <when>
            <simple>{{openmrs.eip.dbsync.encryption.enabled}} == true</simple>
            <!--
                TODO If we can't decrypt the message, put it in some error queue that blocks all future incoming
                messages
            -->
            <log loggingLevel="TRACE" message="Received Raw message -> ${body}" />
            <log loggingLevel="DEBUG" message="Decrypting message.." />

            <process ref="pgpDecryptService" />

            <log loggingLevel="DEBUG" message="Done decrypting message" />
        </when>

        <choice>
            <when>
                <method ref="isFilePredicate" />
                <log message="Received complex obs data file: ${headers.CamelFileName}" />

                <to uri="direct:receiver-complex-obs-sync" />

                <log message="Successfully saved complex obs file: ${headers.CamelFileName}" />
            </when>
            <otherwise>
                <log loggingLevel="DEBUG" message="Received entity-payload: ${body}" />

                <choice>
                    <when>
                        <!-- If this not a record for a deleted entity -->
                        <simple>${body} is 'byte[]'</simple>
                        <setProperty name="entity-payload">
                            <simple>${body}</simple>
                        </setProperty>
                        <setProperty name="model-class">
                            <jsonpath>$.tableToSyncModelClass</jsonpath>
                        </setProperty>
                        <setProperty name="entity-id">
                            <jsonpath>$.model.uuid</jsonpath>
                        </setProperty>

                        <log message="Entity: ${exchangeProperty.model-class}, identifier=${exchangeProperty.entity-id}" />
                    </when>
                    <otherwise>
                        <setProperty name="entity-payload">
                            <simple>${body}</simple>
                        </setProperty>
                        <setProperty name="entity-table">
                            <simple>${body.trim().split(":")[1]}</simple>
                        </setProperty>
                        <setProperty name="table-to-sync-enum">
                            <method beanType="org.openmrs.eip.dbsync.service.TableToSyncEnum" method="getTableToSyncEnum(${exchangeProperty.entity-table})" />
                        </setProperty>
                        <setProperty name="model-class">
                            <simple>${exchangeProperty.table-to-sync-enum.getModelClass().getName()}</simple>
                        </setProperty>
                        <setProperty name="entity-id">
                            <simple>${body.trim().split(":")[2]}</simple>
                        </setProperty>

                        <log message="Deleted Entity: ${exchangeProperty.entity-table}, identifier=${exchangeProperty.entity-id}" />
                    </otherwise>
                </choice>

                <setProperty name="messageToSave">
                    <spel>
                        #{new org.openmrs.eip.dbsync.receiver.management.entity.SyncMessage()}
                    </spel>
                </setProperty>
                <script>
                    <spel>
                        #{getProperty('messageToSave').setIdentifier(getProperty('entity-id'))}
                        #{getProperty('messageToSave').setModelClassName(getProperty('model-class'))}
                        #{getProperty('messageToSave').setEntityPayload(new String(getProperty('entity-payload'), 'UTF-8'))}
                        #{getProperty('messageToSave').setDateCreated(new java.util.Date())}
                    </spel>
                </script>
                <setBody>
                    <simple>${exchangeProperty.messageToSave}</simple>
                </setBody>

                <log loggingLevel="DEBUG" message="Saving received message" />

                <to uri="jpa:SyncMessage?usePersist=true" />

                <log message="Successfully saved received message" />
            </otherwise>
        </choice>

        <log loggingLevel="DEBUG" message="Enabling message acknowledgement" />

        <script>
            <method beanType="org.openmrs.eip.dbsync.receiver.CustomMessageListenerContainer" method="enableAcknowledgement()" />
        </script>

    </route>
</routes>
