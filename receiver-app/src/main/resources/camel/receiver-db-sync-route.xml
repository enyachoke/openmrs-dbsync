<routes xmlns="http://camel.apache.org/schema/spring">
    <route id="receiver-db-sync" errorHandlerRef="receiverErrorHandler">
        <from uri="direct:receiver-db-sync" />
        
        <convertBodyTo type="java.lang.String" />

        <log message="Start receiver-db-sync: ${body}" />

        <setProperty name="original-msg-body">
            <simple>${body}</simple>
        </setProperty>

        <toD uri="jpa:ConflictQueueItem?query=SELECT c FROM ConflictQueueItem c WHERE c.modelClassName ='${exchangeProperty.model-class}' AND c.identifier='${exchangeProperty.entity-id}' AND c.resolved = false" />

        <choice>
            <when>
                <simple>${body.size()} > 0</simple>
                <log message="Moving the message to the failure queue because the entity has ${body.size()} message(s) in the DB sync conflict queue" />
                <setProperty name="err-message">
                    <simple>Cannot process the message because the entity has ${body.size()} message(s) in the DB sync conflict queue</simple>
                </setProperty>
                <throwException exceptionType="java.lang.Exception" message="${exchangeProperty.err-message}" />
            </when>
            <otherwise>
                <setBody>
                    <simple>${exchangeProperty.original-msg-body}</simple>
                </setBody>
                <when>
                    <!-- If this not a record for a deleted entity -->
                    <simple>${body.indexOf('DELETE:')} != 0</simple>
                    <choice>
                        <when>
                            <jsonpath>
                                $.[?(@.tableToSyncModelClass=='org.openmrs.eip.dbsync.model.PersonNameModel')]
                            </jsonpath>
                            <setProperty name="rebuild-search-index">
                                <constant>true</constant>
                            </setProperty>
                            <setProperty name="resource">
                                <constant>person</constant>
                            </setProperty>
                            <setProperty name="sub-resource">
                                <constant>name</constant>
                            </setProperty>
                            <setProperty name="sub-resource-uuid">
                                <jsonpath>$.model.uuid</jsonpath>
                            </setProperty>
                        </when>
                        <when>
                            <jsonpath>
                                $.[?(@.tableToSyncModelClass=='org.openmrs.eip.dbsync.model.PatientIdentifierModel')]
                            </jsonpath>
                            <setProperty name="rebuild-search-index">
                                <constant>true</constant>
                            </setProperty>
                            <setProperty name="resource">
                                <constant>patient</constant>
                            </setProperty>
                            <setProperty name="sub-resource">
                                <constant>identifier</constant>
                            </setProperty>
                            <setProperty name="sub-resource-uuid">
                                <jsonpath>$.model.uuid</jsonpath>
                            </setProperty>
                        </when>
                        <when>
                            <jsonpath>
                                $.[?(@.tableToSyncModelClass=='org.openmrs.eip.dbsync.model.PersonAttributeModel')]
                            </jsonpath>
                            <setProperty name="rebuild-search-index">
                                <constant>true</constant>
                            </setProperty>
                            <setProperty name="resource">
                                <constant>person</constant>
                            </setProperty>
                            <setProperty name="sub-resource">
                                <constant>attribute</constant>
                            </setProperty>
                            <setProperty name="sub-resource-uuid">
                                <jsonpath>$.model.uuid</jsonpath>
                            </setProperty>
                        </when>
                    </choice>
                </when>

                <doTry>
                    <to uri="openmrs:load" />

                    <choice>
                        <when>
                            <simple>${exchangeProperty.rebuild-search-index} == true</simple>
                            <setHeader name="Content-Type">
                                <constant>application/json</constant>
                            </setHeader>
                            <choice>
                                <when>
                                    <simple>${exchangeProperty.sub-resource-uuid} == null</simple>
                                    <setBody>
                                        <simple>
                                            {"resource": "${exchangeProperty.resource}", "subResource": "${exchangeProperty.sub-resource}"}
                                        </simple>
                                    </setBody>
                                </when>
                                <otherwise>
                                    <setBody>
                                        <simple>
                                            {"resource": "${exchangeProperty.resource}", "subResource": "${exchangeProperty.sub-resource}", "uuid": "${exchangeProperty.sub-resource-uuid}"}
                                        </simple>
                                    </setBody>
                                </otherwise>
                            </choice>

                            <process ref="oauthProcessor" />

                            <log message="Rebuilding search Index..." />

                            <setHeader name="CamelHttpMethod">
                                <constant>POST</constant>
                            </setHeader>

                            <choice>
                                <when>
                                    <simple>${headers.Authorization} == null</simple>
                                    <log loggingLevel="DEBUG" message="Authenticating to OpenMRS with username and password" />

                                    <setProperty name="openmrsUser">
                                        <method beanType="org.openmrs.eip.dbsync.receiver.Utils" method="getProperty('openmrs.username')" />
                                    </setProperty>
                                    <setProperty name="openmrsPassword">
                                        <method beanType="org.openmrs.eip.dbsync.receiver.Utils" method="getProperty('openmrs.password')" />
                                    </setProperty>

                                    <toD uri="{{openmrs.baseUrl}}/ws/rest/v1/searchindexupdate?authMethod=Basic&amp;authUsername=${exchangeProperty.openmrsUser}&amp;authPassword=${exchangeProperty.openmrsPassword}" />
                                </when>
                                <otherwise>
                                    <log loggingLevel="DEBUG" message="Authenticating to OpenMRS with oauth token" />

                                    <to uri="{{openmrs.baseUrl}}/ws/rest/v1/searchindexupdate" />
                                </otherwise>
                            </choice>
                        </when>
                    </choice>

                    <doCatch>
                        <exception>org.openmrs.eip.dbsync.exception.ConflictsFoundException</exception>
                        <setProperty name="conflict-item">
                            <spel>
                                #{new org.openmrs.eip.dbsync.receiver.management.entity.ConflictQueueItem()}
                            </spel>
                        </setProperty>

                        <choice>
                            <when>
                                <!-- This is a new message with a conflict -->
                                <simple>${exchangeProperty.retry-item} == null</simple>
                                <script>
                                    <spel>
                                        #{getProperty('conflict-item').setIdentifier(getProperty('entity-id'))}
                                        #{getProperty('conflict-item').setModelClassName(getProperty('model-class'))}
                                        #{getProperty('conflict-item').setEntityPayload(getProperty('entity-payload', T(java.lang.String)))}
                                        #{getProperty('conflict-item').setDateCreated(new java.util.Date())}
                                    </spel>
                                </script>
                            </when>
                            <otherwise>
                                <!-- This is a retry attempt with a conflict -->
                                <script>
                                    <spel>
                                        #{getProperty('conflict-item').setIdentifier(getProperty('retry-item').getIdentifier())}
                                        #{getProperty('conflict-item').setModelClassName(getProperty('retry-item').getModelClassName())}
                                        #{getProperty('conflict-item').setEntityPayload(getProperty('retry-item').getEntityPayload())}
                                        #{getProperty('conflict-item').setDateCreated(new java.util.Date())}
                                    </spel>
                                </script>
                            </otherwise>
                        </choice>

                        <setBody>
                            <simple>${exchangeProperty.conflict-item}</simple>
                        </setBody>

                        <log message="Adding message to conflict queue" loggingLevel="DEBUG" />

                        <to uri="jpa:ConflictQueueItem" />

                        <log message="Successfully added message to conflict queue" loggingLevel="DEBUG" />
                    </doCatch>
                </doTry>
            </otherwise>
        </choice>

        <log message="End receiver-db-sync route" />
    </route>
</routes>
